import gc
import sys
import re
import Messages

class PluginUser(User):
    def __init__(self, user):
        self.nick = "*horse*"
        self.__onServer = True
        self.user = user
        self.permissions = Permissions.Console

    def send(self, message):
        self.user.send(message)

    def receive(self):
        pass

    def accept_canceled(self, reason):
        pass

    def accept_success(self):
        pass

    def disconnect(self, reason="*not_defined*"):
        pass

class Wrapper:
    cmd_re = re.compile(r'([!?])(?:(.*?)\$)?(.*?)(?:@(.*?))?$')

    def __init__(self, serv):
        self.serv = serv
        self.manager = serv.manager
        self.hacker = None
        
    def message_handler(self, message, caller):
        try:
            try:
                if self._handle_command(message, caller):
                    return
            except CmdCallback as cb:
                caller.send(cb.get_message())
                return
        except ServerError as se:
            print("Error:", se.get_text())
            return

        self.manager(message, caller)
    
    def inject(self):
        self.manager = self.serv.manager
        self.serv.manager = self.message_handler
        
    def _handle_command(self, message, caller):
        text = message.get_message()
        
        splitted = text.split(' ')
        text = splitted[0]
        params = ' '.join(splitted[1:])
        
        s = self.cmd_re.search(text)
        if s is None:
            return False
        
        args = s.group(2), s.group(3), s.group(4), params, caller
        if s.group(1) == '!':
            return self._handle_server(*args)
        else:
            return self._handle_client(*args)
    
    def _handle_client(self, prefix, cmd, suffix):
        # Not implemented
        return cmd in ("eval", "exec", "stop")
        
    def _handle_server(self, prefix, cmd, suffix, params, caller):
        if cmd == "cmd":
            self.serv.executor.execute(
                suffix,
                params.split(' '),
                PluginUser(caller)
            )
            return True
        if cmd == "table":
            # https://github.com/stasivs/Messenger/issues/4
            self.serv.resend(Bcast("""
<table>
	<tbody>
		<tr>
			<td>1</td>
			<td>2</td>
		</td>
		<tr>
			<td>3</td>
			<td>4</td>
		</td>
	</tbody>
</table>
            """))
            return True
        if cmd == "stop":
            sys.exit()
            return True
        if cmd == "say":
            if not prefix:
                self.serv.resend(Messages.Bcast(params))
            else:
                self.serv.resend(UserMessage(params, prefix))
            return True
        if cmd == "tell":
            if not suffix:
                return False
            user = self.serv.get_user_by_nick(suffix)
            if not prefix:
                user.send(Messages.Info(params))
            else:
                user.send(UserMessage(params, prefix))
            return True
        if cmd == "eval":
            res = eval(params)
            self.serv.resend(Messages.Info(res))
            return True
        if cmd == "exec":
            exec(params)
            return True
        return False

def main():
    for obj in gc.get_objects():
        if obj.__class__.__name__ == "Server":
            serv = obj
            break
    else:
        print("Server not found =(")
        return
    
    wrapper = Wrapper(serv)
    wrapper.inject()

main()
